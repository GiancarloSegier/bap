{"version":3,"sources":["components/SideNav.module.css","containers/auth/Auth.module.css","containers/dashboard/Dashboard.module.css","containers/dashboard/members/MyCommittee.module.css","components/auth/Auth.module.css","containers/Home.js","containers/Toolkit.js","constants/index.js","containers/DesignStudio.js","components/auth/LoginForm.jsx","containers/auth/Login.js","components/auth/RequestForm.jsx","containers/auth/Request.js","components/Navbar.jsx","components/auth/RegisterForm.jsx","containers/auth/Register.js","components/SideNav.jsx","containers/dashboard/supervisor/Committees.jsx","components/dashboard/RequestDetail.jsx","containers/dashboard/supervisor/Requests.jsx","containers/dashboard/supervisor/Updates.js","containers/dashboard/DashboardHome.jsx","containers/dashboard/members/MyCommittee.js","containers/dashboard/members/News.js","containers/dashboard/members/Planner.js","containers/Dashboard.js","containers/App.js","serviceWorker.js","api/auth.js","utils/index.js","store/UserStore.js","models/Request.jsx","api/index.js","store/RequestStore.js","models/Job.jsx","store/JobStore.js","models/Committee.jsx","store/CommitteeStore.js","store/index.js","index.js","components/Navbar.module.css"],"names":["module","exports","Home","Toolkit","ROUTES","home","toolkit","designstudio","login","request","register","dashboard","dashboardHome","committees","requests","updates","myCommittee","news","planner","DesignStudio","LoginForm","props","handleSubmit","e","preventDefault","state","email","password","userStore","then","authUser","history","push","setState","error","checkUser","checkInput","inputType","value","target","test","emailError","checkFilledForm","disabled","console","log","emailInput","React","createRef","passwordInput","this","length","className","styles","container","onSubmit","form","name","id","placeholder","ref","input","onChange","errorHidden","type","button","subLink","to","link","Component","inject","withRouter","Login","RequestForm","requestId","require","uuid","nameInput","current","surname","surnameInput","organisation","organisationInput","phone","phoneInput","sender","message","messageInput","fetch","catch","err","requestStore","addRequest","job","assignment","privileges","pending","checkEmail","Request","observer","navbar","logo","exact","navLink","activeClassName","active","rightMenu","strict","avatar","src","avatarUrl","alt","onClick","logout","darkLink","activeDark","RegisterForm","componentDidMount","a","async","getRequestId","query","URLSearchParams","location","search","get","getOne","handleChange","currentTarget","committeeStore","uploadAvatar","newPhone","currentRequest","committeeId","addCommittee","raceday","Date","city","country","description","deleteRequest","method","body","formData","res","json","images","url","changeFile","files","Array","from","uploading","FormData","forEach","file","i","append","password2","withIcon","buttonText","imgExtension","maxFileSize","withPreview","singleImage","htmlFor","Register","sideNav","jobStore","jobs","map","RequestDetail","approveRequest","setPending","onUpdateRequest","edit","String","updateRequest","Updates","heading1","MyCommittee","currentCommittee","News","Planner","path","component","DashboardHome","Committees","Requests","App","Dashboard","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","Auth","headers","JSON","stringify","status","Promise","resolve","data","reject","getUserFromCookie","token","Cookies","jwt","base64","split","replace","parse","atob","decodeJWT","UserStore","rootStore","setUser","authService","decorate","observable","action","setId","setName","setSurname","setPhone","setOrganisation","setEmail","setMessage","setJob","updateFromServer","values","_id","computed","Api","entity","getAll","r","ok","create","getOptions","update","delete","upload","options","toUpperCase","key","configure","enforceActions","RequestStore","api","d","_addRequest","_getCurrentRequest","newRequest","requestValues","runInAction","remove","Job","setPrivileges","JobStore","_addJob","Committee","setRaceday","setCity","setCountry","setDescription","CommitteeStore","_addCommittee","_getCurrentCommittee","newCommittee","committeeValues","committee","updateCommittee","deleteCommittee","ReactDOM","render","store","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9595f0ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideNav\":\"SideNav_sideNav__1ZDpT\",\"rightMenu\":\"SideNav_rightMenu__2dGwl\",\"navLink\":\"SideNav_navLink__26L7o\",\"logo\":\"SideNav_logo__3-w2O\",\"darkLink\":\"SideNav_darkLink__25X1D\",\"active\":\"SideNav_active__Nmkx9\",\"activeDark\":\"SideNav_activeDark__82bYz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Auth_form__1gJBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading1\":\"Dashboard_heading1__3JUrb\",\"avatar\":\"Dashboard_avatar__38snW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading1\":\"MyCommittee_heading1__3NbdN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Auth_container__3Qr6g\",\"error\":\"Auth_error___ehqt\",\"errorHidden\":\"Auth_errorHidden__2SXF3\"};","import React from \"react\";\n// import styles from \"./Home.module.css\";\n// import Form from \"../components/Form\";\n\nconst Home = () => {\n  return (\n    <>\n      <div>\n        <p>Hallo allemaalkes</p>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n// import Topbar from \"../components/Topbar\";\n// import styles from \"./Home.module.css\";\n// import Form from \"../components/Form\";\n\nconst Toolkit = () => {\n  return (\n    <>\n      <div>\n        <p>Toolkit</p>\n      </div>\n    </>\n  );\n};\n\nexport default Toolkit;\n","export const ROUTES = {\n  home: `/`,\n  toolkit: \"/toolkit\",\n  designstudio: \"/designstudio\",\n  login: \"/login\",\n  request: \"/request\",\n  register: \"/register\",\n  dashboard: \"/dashboard\",\n  dashboardHome: \"/dashboard\",\n  committees: \"/dashboard/committees\",\n  requests: \"/dashboard/requests\",\n  updates: \"/dashboard/updates\",\n  myCommittee: \"/dashboard/mycommittee\",\n  news: \"/dashboard/news\",\n  planner: \"/dashboard/planner\"\n};\n","import React from \"react\";\n// import Topbar from \"../components/Topbar\";\n// import styles from \"./Home.module.css\";\n// import Form from \"../components/Form\";\n\nconst DesignStudio = () => {\n  return (\n    <>\n      <div>\n        <p>Designstudio</p>\n      </div>\n    </>\n  );\n};\n\nexport default DesignStudio;\n","import React, { Component } from \"react\";\nimport { inject } from \"mobx-react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { ROUTES } from \"../../constants\";\nimport styles from \"./Auth.module.css\";\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      emailError: false,\n      error: false,\n      disabled: true,\n      checkUser: false\n    };\n    console.log(props);\n\n    this.emailInput = React.createRef();\n    this.passwordInput = React.createRef();\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.email !== \"\" && this.state.password !== \"\") {\n      this.props.userStore.login(this.state.email, this.state.password).then(() => {\n        if (this.props.userStore.authUser) {\n          this.props.history.push(ROUTES.dashboard);\n        } else {\n          this.setState({ error: true, checkUser: true });\n        }\n      });\n    } else {\n      this.setState({ error: true });\n    }\n  };\n  checkInput = (e, inputType) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const value = e.target.value;\n    this.setState({ checkUser: false });\n    if (inputType === \"email\") {\n      if (re.test(value)) {\n        this.setState({ email: value, emailError: false });\n      } else {\n        this.setState({ email: \"\", emailError: true });\n      }\n    }\n    if (inputType === \"password\") {\n      this.setState({ password: value });\n    }\n    this.checkFilledForm();\n  };\n\n  checkFilledForm() {\n    console.log(this.state);\n    if (\n      this.state.email !== \"\" &&\n      this.state.password !== \"\" &&\n      this.state.password.length > 1\n    ) {\n      this.setState({ disabled: false, error: false });\n    } else {\n      this.setState({ disabled: true });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className={styles.container}>\n          <form onSubmit={this.handleSubmit} className={styles.form}>\n            <h2>Login</h2>\n            <input\n              name=\"email\"\n              id=\"email=\"\n              placeholder=\"email\"\n              ref={this.emailInput}\n              className={styles.input}\n              onChange={e => this.checkInput(e, \"email\")}\n            />\n            <p\n              className={\n                this.state.emailError ? styles.error : styles.errorHidden\n              }\n            >\n              You have to fill in a valid email\n            </p>\n\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"password\"\n              ref={this.passwordInput}\n              className={styles.input}\n              onChange={e => this.checkInput(e, \"password\")}\n            />\n\n            <input type=\"submit\" value=\"login\" className={styles.button} />\n            <p className={this.state.error ? styles.error : styles.errorHidden}>\n              {this.state.checkUser\n                ? \"Incorrect email or password\"\n                : \"Please fill in all fields correctly\"}\n            </p>\n\n            <p className={styles.subLink}>\n              No account?{` `}\n              <Link to={ROUTES.request} className={styles.link}>\n                Send a request!\n              </Link>\n            </p>\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default inject(`userStore`)(withRouter(LoginForm));\n","import React from \"react\";\nimport LoginForm from \"../../components/auth/LoginForm\";\n// import Topbar from \"../components/Topbar\";\nimport styles from \"./Auth.module.css\";\n// import Form from \"../components/Form\";\n\nconst Login = () => {\n  return (\n    <>\n      <div className={styles.form}>\n        <LoginForm />\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { inject } from \"mobx-react\";\n\nimport { withRouter } from \"react-router-dom\";\n\nimport styles from \"./Auth.module.css\";\n\nclass RequestForm extends Component {\n  constructor(props) {\n    super(props);\n    this.nameInput = React.createRef();\n    this.surnameInput = React.createRef();\n    this.organisationInput = React.createRef();\n    this.phoneInput = React.createRef();\n    this.emailInput = React.createRef();\n\n    this.messageInput = React.createRef();\n\n    this.state = {\n      emailError: false,\n      error: false\n    };\n  }\n\n  handleSubmit = e => {\n    const uuid = require(\"uuid\");\n    const requestId = uuid();\n    const name = this.nameInput.current.value;\n    const surname = this.surnameInput.current.value;\n    const organisation = this.organisationInput.current.value;\n    const phone = this.phoneInput.current.value;\n    const sender = this.state.email;\n\n    const message = this.messageInput.current.value;\n\n    e.preventDefault();\n\n    if (\n      name !== \"\" &&\n      surname !== \"\" &&\n      organisation !== \"\" &&\n      phone !== \"\" &&\n      this.state.email !== \"\" &&\n      message !== \"\"\n    ) {\n      fetch(\n        `http://127.0.0.1:4000/send-mail?type=request&sender=${sender}&message=${message}&name=${name}&surname=${surname}&phone=${phone}&organisation=${organisation}&id=${requestId}`\n      ).catch(err => console.log(err));\n\n      this.props.requestStore.addRequest({\n        id: requestId,\n        name: name,\n        surname: surname,\n        organisation: organisation,\n        phone: phone,\n        email: sender,\n        message: message,\n        job: {\n          assignment: \"Event Manager\",\n          privileges: \"admin\"\n        },\n        pending: false\n      });\n\n      this.nameInput.current.value = \"\";\n      this.emailInput.current.value = \"\";\n      this.surnameInput.current.value = \"\";\n      this.messageInput.current.value = \"\";\n      this.phoneInput.current.value = \"\";\n      this.organisationInput.current.value = \"\";\n    } else {\n      this.setState({ error: true });\n    }\n  };\n\n  checkEmail = (e, inputType) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const value = e.target.value;\n    this.setState({ checkUser: false });\n    if (inputType === \"email\") {\n      if (re.test(value)) {\n        this.setState({ email: value, emailError: false });\n      } else {\n        this.setState({ email: \"\", emailError: true });\n      }\n    }\n\n    this.checkFilledForm();\n  };\n\n  checkFilledForm() {\n    console.log(this.state);\n    if (this.state.email !== \"\") {\n      this.setState({ error: false });\n    }\n  }\n  render() {\n    return (\n      <>\n        <div className={styles.container}>\n          <form onSubmit={this.handleSubmit} className={styles.form}>\n            <h2>Request acces</h2>\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              placeholder=\"name\"\n              ref={this.nameInput}\n              className={styles.input}\n            />\n            <input\n              type=\"text\"\n              name=\"surname\"\n              id=\"surname=\"\n              placeholder=\"surname\"\n              ref={this.surnameInput}\n              className={styles.input}\n            />\n            <input\n              type=\"text\"\n              name=\"organisation\"\n              id=\"organisation\"\n              placeholder=\"organisation\"\n              ref={this.organisationInput}\n              className={styles.input}\n            />\n            <input\n              type=\"tel\"\n              name=\"phone\"\n              id=\"phone=\"\n              placeholder=\"phone\"\n              ref={this.phoneInput}\n              className={styles.input}\n            />\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email=\"\n              placeholder=\"email\"\n              ref={this.emailInput}\n              className={styles.input}\n              onChange={e => this.checkEmail(e, \"email\")}\n            />\n            <p\n              className={\n                this.state.emailError ? styles.error : styles.errorHidden\n              }\n            >\n              You have to fill in a valid email\n            </p>\n\n            <textarea\n              name=\"message\"\n              id=\"message\"\n              placeholder=\"message\"\n              ref={this.messageInput}\n              className={styles.input}\n            />\n\n            <input\n              type=\"submit\"\n              value=\"send request\"\n              className={styles.button}\n            />\n            <p className={this.state.error ? styles.error : styles.errorHidden}>\n              Please fill in all fields correctly\n            </p>\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default inject(`userStore`, `requestStore`)(withRouter(RequestForm));\n","import React from \"react\";\nimport RequestForm from \"../../components/auth/RequestForm\";\nimport styles from \"./Auth.module.css\";\n\n// import Topbar from \"../components/Topbar\";\n// import styles from \"./Home.module.css\";\n// import Form from \"../components/Form\";\n\nconst Request = () => {\n  return (\n    <>\n      <div className={styles.form}>\n        <RequestForm />\n      </div>\n    </>\n  );\n};\n\nexport default Request;\n","import React from \"react\";\nimport styles from \"./Navbar.module.css\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { ROUTES } from \"../constants\";\nimport { inject, observer } from \"mobx-react\";\n\nconst Navbar = ({ userStore }) => {\n  const handleLogout = e => {\n    userStore.logout();\n  };\n\n  return (\n    <ul className={styles.navbar}>\n      <li className={styles.logo}>\n        <NavLink\n          exact={true}\n          className={styles.navLink}\n          to={ROUTES.home}\n          activeClassName={styles.active}\n        >\n          Logo\n        </NavLink>\n      </li>\n      <div className={styles.rightMenu}>\n        {userStore.authUser ? (\n          <li>\n            <NavLink\n              strict={true}\n              className={styles.navLink}\n              to={ROUTES.dashboard}\n              activeClassName={styles.active}\n            >\n              Dashboard\n            </NavLink>\n          </li>\n        ) : null}\n        <li>\n          <NavLink\n            strict={true}\n            className={styles.navLink}\n            to={ROUTES.designstudio}\n            activeClassName={styles.active}\n          >\n            Designstudio\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            strict={true}\n            className={styles.navLink}\n            to={ROUTES.toolkit}\n            activeClassName={styles.active}\n          >\n            Toolkit\n          </NavLink>\n        </li>\n        {!userStore.authUser ? (\n          <>\n            <li>\n              <NavLink\n                strict={true}\n                className={styles.navLink + \" \" + styles.darkLink}\n                to={ROUTES.login}\n                activeClassName={styles.activeDark}\n              >\n                Member login\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                strict={true}\n                className={styles.navLink + \" \" + styles.darkLink}\n                to={ROUTES.request}\n                activeClassName={styles.activeDark}\n              >\n                Request acces\n              </NavLink>\n            </li>\n          </>\n        ) : (\n          <>\n            <img\n              className={styles.avatar}\n              src={userStore.authUser.avatarUrl}\n              alt={`Avatar from ${userStore.authUser.name}`}\n            />\n            <p className={styles.navLink}>{userStore.authUser.name}</p>\n\n            <NavLink\n              strict={true}\n              onClick={handleLogout}\n              className={styles.navLink + \" \" + styles.darkLink}\n              to={ROUTES.home}\n            >\n              Log out\n            </NavLink>\n          </>\n        )}\n      </div>\n    </ul>\n  );\n};\n\nexport default inject(`userStore`)(observer(Navbar));\n","import React, { Component } from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { ROUTES } from \"../../constants\";\nimport styles from \"./Auth.module.css\";\n\nimport ImageUploader from \"react-images-upload\";\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: ``,\n      password2: ``,\n      phone: ``,\n      images: []\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.getRequestId();\n  };\n\n  getRequestId = async () => {\n    const query = new URLSearchParams(this.props.location.search);\n    const id = query.get(\"id\");\n    await this.props.requestStore.getOne(id);\n  };\n\n  handleChange = e => {\n    const input = e.currentTarget;\n    const state = { ...this.state };\n\n    state[input.name] = input.value;\n    this.setState(state);\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const { userStore, committeeStore, requestStore, history } = this.props;\n\n    await this.uploadAvatar();\n\n    const { password, avatarUrl, newPhone } = this.state;\n    const {\n      id,\n      email,\n      name,\n      surname,\n      phone,\n      organisation,\n      job\n    } = this.props.requestStore.currentRequest;\n    const committeeId = id;\n\n    if (phone) {\n      this.phone = phone;\n    } else {\n      this.phone = newPhone;\n    }\n\n    console.log(avatarUrl);\n\n    await userStore\n      .register(\n        name,\n        surname,\n        email,\n        password,\n        job,\n        phone,\n        organisation,\n        committeeId,\n        avatarUrl\n      )\n      .then(() => {\n        userStore.login(email, password);\n      })\n      .then(() => {\n        committeeStore.addCommittee({\n          id: committeeId,\n          name: organisation,\n          raceday: new Date(\"2020-09-29\"),\n          city: \"\",\n          country: \"\",\n          description: \"\"\n        });\n      })\n      .then(() => {\n        history.push(ROUTES.dashboard);\n      })\n      .then(() => {\n        requestStore.deleteRequest(this.props.requestStore.currentRequest);\n      });\n  };\n\n  uploadAvatar = async () => {\n    await fetch(`http://localhost:4000/image-upload`, {\n      method: \"POST\",\n      body: this.state.formData\n    })\n      .then(res => res.json())\n      .then(images => {\n        this.setState({\n          avatarUrl: images[0].url\n        });\n      });\n  };\n\n  changeFile = e => {\n    console.log(e);\n    const files = Array.from(e);\n    this.setState({ uploading: true });\n\n    const formData = new FormData();\n\n    files.forEach((file, i) => {\n      formData.append(i, file);\n    });\n\n    this.setState({ formData: formData });\n  };\n\n  render() {\n    const { password, password2, newPhone } = this.state;\n    const {\n      email,\n      name,\n      surname,\n      phone\n    } = this.props.requestStore.currentRequest;\n\n    if (email && name && surname && phone) {\n      return (\n        <>\n          <div className={styles.container}>\n            <form onSubmit={this.handleSubmit} className={styles.form}>\n              <h2>Register</h2>\n              <ImageUploader\n                withIcon={true}\n                buttonText=\"Choose images\"\n                onChange={this.changeFile}\n                imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n                maxFileSize={5242880}\n                withPreview={true}\n                singleImage={true}\n              />\n\n              <label htmlFor=\"password\">\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={this.handleChange}\n                  className={styles.input}\n                  placeholder=\"Password\"\n                />\n              </label>\n              <label htmlFor=\"password2\">\n                <input\n                  type=\"password\"\n                  name=\"password2\"\n                  id=\"password2\"\n                  ref={password2}\n                  onChange={this.handleChange}\n                  className={styles.input}\n                  placeholder=\"Confirm password\"\n                />\n              </label>\n\n              {/* <select name=\"job\" onChange={this.handleChange}>\n              {this.props.jobStore.jobs.map(job => (\n                <option value={`${job.assignment}|${job.privileges}`}>\n                  {job.assignment}\n                </option>\n              ))}\n            </select> */}\n              {phone ? null : (\n                <label htmlFor=\"newPhone\">\n                  <input\n                    type=\"text\"\n                    name=\"newPhone\"\n                    id=\"newPhone\"\n                    value={newPhone}\n                    onChange={this.handleChange}\n                    className={styles.input}\n                    placeholder=\"phone\"\n                  />\n                </label>\n              )}\n              <input\n                type=\"submit\"\n                value=\"Register\"\n                disabled={\n                  (password && password !== password2) ||\n                  !email ||\n                  !name ||\n                  !surname ||\n                  !password\n                }\n                className={styles.button}\n              />\n              <p className={styles.subLink}>\n                Have an account?{` `}\n                <Link to={ROUTES.login} className={styles.link}>\n                  Login!\n                </Link>\n              </p>\n            </form>\n          </div>\n        </>\n      );\n    } else {\n      return (\n        <div>\n          <p>Seems like you haven't received an invitation.</p>\n          <p>Or you allready used your invitationlink.</p>\n        </div>\n      );\n    }\n  }\n}\n\nexport default inject(\n  `userStore`,\n  `jobStore`,\n  `requestStore`,\n  `committeeStore`\n)(withRouter(observer(RegisterForm)));\n","import React from \"react\";\nimport styles from \"./Auth.module.css\";\n// import Form from \"../components/Form\";\nimport RegisterForm from \"../../components/auth/RegisterForm\";\n\nconst Register = () => {\n  return (\n    <>\n      <div className={styles.form}>\n        <RegisterForm />\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\n// import styles from \"./Navbar.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { ROUTES } from \"../constants\";\nimport { inject, observer } from \"mobx-react\";\nimport styles from \"./SideNav.module.css\";\n\nconst SideNav = ({ userStore }) => {\n  return (\n    <ul className={styles.sideNav}>\n      <div className={styles.rightMenu}>\n        <li>\n          <NavLink\n            exact={true}\n            className={styles.navLink}\n            to={ROUTES.dashboardHome}\n            activeClassName={styles.active}\n          >\n            Dashboard\n          </NavLink>\n        </li>\n        {userStore.privileges === \"supervisor\" ? (\n          <>\n            <li>\n              <NavLink\n                strict={true}\n                className={styles.navLink}\n                to={ROUTES.committees}\n                activeClassName={styles.active}\n              >\n                Committees\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                strict={true}\n                className={styles.navLink}\n                to={ROUTES.requests}\n                activeClassName={styles.active}\n              >\n                Requests\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                strict={true}\n                className={styles.navLink}\n                to={ROUTES.updates}\n                activeClassName={styles.active}\n              >\n                Updates\n              </NavLink>\n            </li>\n          </>\n        ) : (\n          <>\n            <li>\n              <NavLink\n                strict={true}\n                className={styles.navLink}\n                to={ROUTES.myCommittee}\n                activeClassName={styles.active}\n              >\n                Committee\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                strict={true}\n                className={styles.navLink}\n                to={ROUTES.planner}\n                activeClassName={styles.active}\n              >\n                Planner\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                strict={true}\n                className={styles.navLink}\n                to={ROUTES.news}\n                activeClassName={styles.active}\n              >\n                News\n              </NavLink>\n            </li>\n          </>\n        )}\n      </div>\n    </ul>\n  );\n};\n\nexport default inject(`userStore`)(observer(SideNav));\n","import React from \"react\";\n// import styles from \"./Requests.module.css\";\n// import Form from \"../components/Form\";\n\nimport { inject, observer } from \"mobx-react\";\n\nconst Committees = ({ jobStore }) => {\n  return (\n    <>\n      {jobStore.jobs.length > 0 ? (\n        <div>\n          <ul>\n            {jobStore.jobs.map(job => (\n              <li>\n                {job.assignment} - privileges: {job.privileges}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p>Add a new job, please.</p>\n      )}\n    </>\n  );\n};\n\nexport default inject(`jobStore`)(observer(Committees));\n","import React, { Component } from \"react\";\n// import styles from \"./RequestDetail.module.css\";\nimport { observer, inject } from \"mobx-react\";\n\nclass RequestDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { edit: false, currentRequest: props.currentRequest };\n  }\n\n  approveRequest = request => {\n    request.setPending(true);\n    this.setState({ currentRequest: request });\n    this.props.onUpdateRequest(request);\n  };\n\n  render() {\n    const { currentRequest } = this.props;\n    return (\n      <li>\n        {currentRequest.name} - {currentRequest.organisation} - pending:{\" \"}\n        {String(currentRequest.pending)}\n        {currentRequest.pending === true ? null : (\n          <button onClick={() => this.approveRequest(currentRequest)}>\n            Approve request\n          </button>\n        )}\n      </li>\n    );\n  }\n}\n\nexport default inject(`requestStore`)(observer(RequestDetail));\n","import React from \"react\";\n// import styles from \"./Requests.module.css\";\n// import Form from \"../components/Form\";\n\nimport { inject, observer, PropTypes } from \"mobx-react\";\nimport RequestDetail from \"../../../components/dashboard/RequestDetail\";\n\nconst Requests = ({ requestStore }) => {\n  const onUpdateRequest = async request => {\n    await requestStore.updateRequest(request);\n\n    await fetch(\n      `http://127.0.0.1:4000/send-mail?type=invite&id=${request.id}&name=${request.name}&recipient=${request.email}&organisation=${request.organisation}`\n    ).catch(err => console.log(err));\n  };\n  return (\n    <>\n      {requestStore.requests.length > 0 ? (\n        <div>\n          <ul>\n            {requestStore.requests.map(request => (\n              <RequestDetail\n                currentRequest={request}\n                onUpdateRequest={onUpdateRequest}\n              />\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p>Add a new request, please.</p>\n      )}\n    </>\n  );\n};\n\nRequests.propTypes = {\n  requestStore: PropTypes.observableObject.isRequired\n};\n\nexport default inject(`requestStore`)(observer(Requests));\n","import React from \"react\";\n// import styles from \"./Updates.module.css\";\n// import Form from \"../components/Form\";\n\nconst Updates = () => {\n  return (\n    <>\n      <div>\n        <p>Updates</p>\n      </div>\n    </>\n  );\n};\n\nexport default Updates;\n","import React from \"react\";\nimport styles from \"./Dashboard.module.css\";\n// import Form from \"../components/Form\";\n\nimport { inject, observer } from \"mobx-react\";\n\nconst DashboardHome = ({ userStore }) => {\n  console.log(userStore.authUser);\n  return (\n    <>\n      <div>\n        <h1 className={styles.heading1}>{userStore.authUser.job.privileges}</h1>\n        <img\n          className={styles.avatar}\n          src={userStore.authUser.avatarUrl}\n          alt=\"image\"\n        />\n        <p>\n          Goeiemorgen {userStore.authUser.name} {userStore.authUser.surname}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default inject(`userStore`)(observer(DashboardHome));\n","import React, { Component } from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport styles from \"./MyCommittee.module.css\";\n// import Form from \"../components/Form\";\n\nclass MyCommittee extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      committeeId: props.userStore.authUser.committeeId\n    };\n    this.props.committeeStore.getOne(props.userStore.authUser.committeeId);\n  }\n\n  render() {\n    const { name } = this.props.committeeStore.currentCommittee;\n    return (\n      <>\n        <div>\n          <h1>MyCommittee</h1>\n          <p className={styles.heading1}>Team name: {name}</p>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default inject(`userStore`, `committeeStore`)(observer(MyCommittee));\n","import React from \"react\";\n// import styles from \"./News.module.css\";\n// import Form from \"../components/Form\";\n\nconst News = () => {\n  return (\n    <>\n      <div>\n        <p>News</p>\n      </div>\n    </>\n  );\n};\n\nexport default News;\n","import React from \"react\";\n// import styles from \"./Planner.module.css\";\n// import Form from \"../components/Form\";\n\nconst Planner = () => {\n  return (\n    <>\n      <div>\n        <p>Planner</p>\n      </div>\n    </>\n  );\n};\n\nexport default Planner;\n","import React from \"react\";\n// import styles from \"./Dashboard.module.css\";\n// import Form from \"../components/Form\";\nimport SideNav from \"../components/SideNav\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ROUTES } from \"../constants\";\nimport Committees from \"./dashboard/supervisor/Committees\";\nimport Requests from \"./dashboard/supervisor/Requests\";\nimport Updates from \"./dashboard/supervisor/Updates\";\nimport DashboardHome from \"./dashboard/DashboardHome\";\nimport MyCommittee from \"./dashboard/members/MyCommittee\";\nimport News from \"./dashboard/members/News\";\nimport Planner from \"./dashboard/members/Planner\";\n\nimport { inject, observer } from \"mobx-react\";\n\nconst Dashboard = ({ userStore }) => {\n  const { privileges } = userStore.authUser.job;\n\n  if (privileges === \"supervisor\") {\n    return (\n      <>\n        <SideNav />\n        <Switch>\n          <Route\n            path={ROUTES.dashboardHome}\n            exact\n            strict\n            component={DashboardHome}\n          />\n          <Route path={ROUTES.committees} strict component={Committees} />\n          <Route path={ROUTES.requests} strict component={Requests} />\n          <Route path={ROUTES.updates} strict component={Updates} />\n        </Switch>\n      </>\n    );\n  } else if (privileges === \"admin\") {\n    return (\n      <>\n        <SideNav />\n        <Switch>\n          <Route\n            path={ROUTES.dashboardHome}\n            exact\n            strict\n            component={DashboardHome}\n          />\n          <Route path={ROUTES.myCommittee} strict component={MyCommittee} />\n          <Route path={ROUTES.planner} strict component={Planner} />\n          <Route path={ROUTES.news} strict component={News} />\n        </Switch>\n      </>\n    );\n  }\n};\n\nexport default inject(`userStore`)(observer(Dashboard));\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./Home.js\";\nimport Toolkit from \"./Toolkit.js\";\nimport { ROUTES } from \"../constants\";\nimport DesignStudio from \"./DesignStudio.js\";\nimport Login from \"./auth/Login\";\nimport Request from \"./auth/Request.js\";\nimport NavBar from \"../components/Navbar.jsx\";\nimport Register from \"./auth/Register.js\";\n\nimport { inject, observer } from \"mobx-react\";\nimport Dashboard from \"./Dashboard.js\";\nimport NotFound from \"./NotFound.js\";\n\nclass App extends Component {\n  render() {\n    return (\n      <main>\n        <NavBar />\n        <Switch>\n          <Route path={ROUTES.home} exact strict component={Home} />\n          <Route path={ROUTES.toolkit} strict component={Toolkit} />\n          <Route path={ROUTES.designstudio} strict component={DesignStudio} />\n          <Route path={ROUTES.login} strict component={Login} />\n          <Route path={ROUTES.request} strict component={Request} />\n          <Route path={ROUTES.register} strict component={Register} />\n          {this.props.userStore.authUser ? (\n            <Route path={ROUTES.dashboard} strict component={Dashboard} />\n          ) : null}\n          {/* <Route path=\"*\" component={NotFound} /> */}\n        </Switch>\n      </main>\n    );\n  }\n}\n\nexport default inject(`userStore`)(observer(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","class Auth {\n  login = async (email, password) => {\n    const res = await fetch(`/auth/login`, {\n      method: `POST`,\n      headers: {\n        \"content-type\": `application/json`\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (res.status === 200) {\n      Promise.resolve();\n    } else {\n      return res.json().then(data => {\n        Promise.reject(data);\n      });\n    }\n  };\n\n  logout = () => {\n    return fetch(`/auth/logout`, {\n      method: `POST`,\n      headers: {\n        \"content-type\": `application/json`\n      }\n    });\n  };\n\n  register = (\n    name,\n    surname,\n    email,\n    password,\n    job,\n    phone,\n    organisation,\n    committeeId,\n    avatarUrl\n  ) => {\n    return fetch(`/auth/register`, {\n      method: `POST`,\n      headers: {\n        \"content-type\": `application/json`\n      },\n      body: JSON.stringify({\n        name,\n        surname,\n        email,\n        password,\n        job,\n        phone,\n        organisation,\n        committeeId,\n        avatarUrl\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        Promise.resolve();\n      } else {\n        Promise.reject();\n      }\n    });\n  };\n}\n\nexport default Auth;\n","import Cookies from \"js-cookie\";\n\nconst decodeJWT = jwt => {\n  const base64Url = jwt.split(`.`)[1];\n  const base64 = base64Url.replace(/-/g, `+`).replace(/_/g, `/`);\n  return JSON.parse(window.atob(base64));\n};\n\nconst getUserFromCookie = () => {\n  const token = Cookies.get(`token`);\n  if (token) {\n    return decodeJWT(token);\n  }\n  return null;\n};\n\nexport { getUserFromCookie };\n","import { decorate, observable, action } from \"mobx\";\nimport Auth from \"../api/auth\";\nimport { getUserFromCookie } from \"../utils/index.js\";\n\nclass UserStore {\n  authUser = null;\n  privileges = \"public\";\n\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.authService = new Auth();\n    this.setUser(getUserFromCookie());\n  }\n\n  setUser = value => {\n    this.authUser = value;\n    if (value !== null) {\n      this.privileges = value.job.privileges;\n    }\n  };\n\n  login = (email, password) => {\n    return this.authService\n      .login(email, password)\n      .then(() => {\n        this.setUser(getUserFromCookie());\n        Promise.resolve();\n      })\n      .catch(() => {\n        this.setUser(null);\n        Promise.reject();\n      });\n  };\n\n  register = async (\n    name,\n    surname,\n    email,\n    password,\n    job,\n    phone,\n    organisation,\n    committeeId,\n    avatarUrl\n  ) => {\n    await this.authService.register(\n      name,\n      surname,\n      email,\n      password,\n      job,\n      phone,\n      organisation,\n      committeeId,\n      avatarUrl\n    );\n  };\n\n  logout = () => {\n    this.authService.logout().then(() => this.setUser(null));\n  };\n}\n\ndecorate(UserStore, {\n  authUser: observable,\n  setUser: action,\n  privileges: observable\n});\n\nexport default UserStore;\n","import uuid from \"uuid\";\nimport { decorate, observable, computed, action } from \"mobx\";\n\nclass Request {\n  constructor(\n    id,\n    name,\n    surname,\n    phone,\n    organisation,\n    email,\n    message,\n    job,\n    pending\n  ) {\n    this.id = id;\n    this.name = name;\n    this.surname = surname;\n    this.phone = phone;\n    this.organisation = organisation;\n    this.email = email;\n    this.message = message;\n    this.job = job;\n    this.pending = pending;\n  }\n\n  get values() {\n    return {\n      id: this.id,\n      name: this.name,\n      surname: this.surname,\n      phone: this.phone,\n      organisation: this.organisation,\n      email: this.email,\n      message: this.message,\n      job: this.job,\n      pending: this.pending\n    };\n  }\n\n  setId = id => (this.id = id);\n  setName = name => (this.name = name);\n  setSurname = surname => (this.surname = surname);\n  setPhone = phone => (this.phone = phone);\n  setOrganisation = organisation => (this.organisation = organisation);\n  setEmail = email => (this.email = email);\n  setMessage = message => (this.message = message);\n  setJob = job => (this.job = job);\n  setPending = pending => (this.pending = pending);\n\n  updateFromServer = values => {\n    console.log(values);\n    this.setId(values._id);\n    this.setName(values.name);\n    this.setSurname(values.surname);\n    this.setPhone(values.phone);\n    this.setOrganisation(values.organisation);\n    this.setEmail(values.email);\n    this.setMessage(values.message);\n    this.setJob(values.job);\n    this.setPending(values.pending);\n  };\n}\n\ndecorate(Request, {\n  id: observable,\n  setId: action,\n  setName: action,\n  setSurname: action,\n  setOrganisation: action,\n  setPhone: action,\n  setEmail: action,\n  setMessage: action,\n  setJob: action,\n  setPending: action,\n  values: computed\n});\n\nexport default Request;\n","class Api {\n  constructor(entity) {\n    this.entity = entity;\n  }\n\n  getAll = async () => {\n    const r = await fetch(`/api/${this.entity}`);\n    console.log(r);\n    return await r.json();\n  };\n\n  getOne = async id => {\n    console.log(id);\n    const r = await fetch(`/api/${this.entity}/${id}`);\n\n    console.log(r);\n    if (r.ok === true) {\n      return await r.json();\n    } else {\n      return null;\n    }\n  };\n\n  create = async entity => {\n    const r = await fetch(\n      `/api/${this.entity}`,\n      this.getOptions(`post`, entity.values)\n    );\n    return await r.json();\n  };\n\n  update = async entity => {\n    console.log(entity);\n    const r = await fetch(\n      `/api/${this.entity}/${entity.id}`,\n      this.getOptions(`put`, entity.values)\n    );\n    return await r.json();\n  };\n\n  delete = async entity => {\n    const r = await fetch(\n      `/api/${this.entity}/${entity.id}`,\n      this.getOptions(`delete`)\n    );\n    return r.json();\n  };\n\n  getOptions = (method, body = null, upload = false) => {\n    const options = {\n      method: method.toUpperCase()\n    };\n\n    if (!upload) {\n      options.headers = {\n        \"content-type\": `application/json`\n      };\n    }\n    if (body) {\n      if (upload) {\n        const formData = new FormData();\n        for (var key in body) {\n          formData.append(key, body[key]);\n        }\n        options.body = formData;\n      } else {\n        options.body = JSON.stringify(body);\n      }\n    }\n    return options;\n  };\n}\n\nexport default Api;\n","import { decorate, observable, configure, action, runInAction } from \"mobx\";\nimport Request from \"../models/Request\";\nimport Api from \"../api\";\n\nconfigure({ enforceActions: `observed` });\n\nclass RequestStore {\n  requests = [];\n  currentRequest = {};\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.api = new Api(`requests`);\n    this.getAll();\n  }\n\n  getAll = () => {\n    this.api.getAll().then(d => d.forEach(this._addRequest));\n  };\n\n  getOne = id => {\n    this.api.getOne(id).then(d => {\n      if (d !== null) {\n        this._getCurrentRequest(d);\n      }\n    });\n  };\n\n  addRequest = data => {\n    const newRequest = new Request();\n    newRequest.updateFromServer(data);\n    this.requests.push(newRequest);\n\n    this.api\n      .create(newRequest)\n      .then(requestValues => newRequest.updateFromServer(requestValues));\n  };\n\n  _addRequest = values => {\n    const request = new Request();\n    request.updateFromServer(values);\n    runInAction(() => {\n      this.requests.push(request);\n    });\n  };\n\n  _getCurrentRequest = values => {\n    const request = new Request();\n    request.updateFromServer(values);\n    runInAction(() => {\n      this.currentRequest = request;\n    });\n    console.log(values);\n  };\n\n  updateRequest = request => {\n    this.api\n      .update(request)\n      .then(requestValues => request.updateFromServer(requestValues));\n  };\n\n  deleteRequest = request => {\n    this.requests.remove(request);\n    this.api.delete(request);\n  };\n}\n\ndecorate(RequestStore, {\n  requests: observable,\n  addRequest: action,\n  deleteRequest: action,\n  getOne: action,\n  currentRequest: observable\n});\n\nexport default RequestStore;\n","import uuid from \"uuid\";\nimport { decorate, observable, computed, action } from \"mobx\";\n\nclass Job {\n  constructor(id, assignment, privileges) {\n    this.id = id;\n    this.assignment = assignment;\n    this.privileges = privileges;\n  }\n\n  get values() {\n    return {\n      id: this.id,\n      assignment: this.assignment,\n      privileges: this.privileges\n    };\n  }\n\n  setId = id => (this.id = id);\n  setJob = assignment => (this.assignment = assignment);\n  setPrivileges = privileges => (this.privileges = privileges);\n\n  updateFromServer = values => {\n    this.setId(values._id);\n    this.setJob(values.assignment);\n    this.setPrivileges(values.privileges);\n  };\n}\n\ndecorate(Job, {\n  id: observable,\n  setId: action,\n  setJob: action,\n  setPrivileges: action,\n  values: computed\n});\n\nexport default Job;\n","import { decorate, observable, configure, action, runInAction } from \"mobx\";\nimport Job from \"../models/Job\";\nimport Api from \"../api\";\n\nconfigure({ enforceActions: `observed` });\nclass JobStore {\n  jobs = [];\n\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.api = new Api(`jobs`);\n    this.getAll();\n  }\n\n  getAll = () => {\n    this.api.getAll().then(d => d.forEach(this._addJob));\n  };\n\n  _addJob = values => {\n    const job = new Job();\n    job.updateFromServer(values);\n    runInAction(() => {\n      this.jobs.push(job);\n    });\n  };\n}\n\ndecorate(JobStore, {\n  jobs: observable\n});\n\nexport default JobStore;\n","import uuid from \"uuid\";\nimport { decorate, observable, computed, action } from \"mobx\";\n\nclass Committee {\n  constructor(id, name, raceday, city, country, description) {\n    this.id = id;\n    this.name = name;\n    this.raceday = raceday;\n    this.city = city;\n    this.country = country;\n    this.description = description;\n  }\n\n  get values() {\n    return {\n      id: this.id,\n      name: this.name,\n      raceday: this.raceday,\n      city: this.city,\n      country: this.country,\n      description: this.description\n    };\n  }\n\n  setId = id => (this.id = id);\n  setName = name => (this.name = name);\n  setRaceday = raceday => (this.raceday = raceday);\n  setCity = city => (this.city = city);\n  setCountry = country => (this.country = country);\n  setDescription = description => (this.description = description);\n\n  updateFromServer = values => {\n    console.log(values);\n    this.setId(values.id);\n    this.setName(values.name);\n    this.setRaceday(values.raceday);\n    this.setCity(values.city);\n    this.setCountry(values.country);\n    this.setDescription(values.description);\n  };\n}\n\ndecorate(Committee, {\n  id: observable,\n  setId: action,\n  setName: action,\n  setRaceday: action,\n  setCity: action,\n  setCountry: action,\n  setDescription: action,\n  values: computed\n});\n\nexport default Committee;\n","import { decorate, observable, configure, action, runInAction } from \"mobx\";\nimport Committee from \"../models/Committee\";\nimport Api from \"../api\";\n\nconfigure({ enforceActions: `observed` });\n\nclass CommitteeStore {\n  committees = [];\n  currentCommittee = {};\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.api = new Api(`committees`);\n    // this.getAll();\n  }\n\n  getAll = () => {\n    this.api.getAll().then(d => d.forEach(this._addCommittee));\n  };\n\n  getOne = id => {\n    this.api.getOne(id).then(d => {\n      this._getCurrentCommittee(d);\n    });\n  };\n\n  addCommittee = data => {\n    const newCommittee = new Committee();\n    newCommittee.updateFromServer(data);\n    this.committees.push(newCommittee);\n    console.log(newCommittee);\n\n    this.api\n      .create(newCommittee)\n      .then(committeeValues => newCommittee.updateFromServer(committeeValues));\n  };\n\n  _addCommittee = values => {\n    console.log(values);\n    const committee = new Committee();\n    committee.updateFromServer(values);\n    runInAction(() => {\n      this.committees.push(committee);\n    });\n  };\n\n  _getCurrentCommittee = values => {\n    console.log(values);\n    const committee = new Committee();\n    committee.updateFromServer(values);\n    runInAction(() => {\n      this.currentCommittee = committee;\n    });\n    console.log(values);\n  };\n\n  updateCommittee = committee => {\n    this.api\n      .update(committee)\n      .then(committeeValues => committee.updateFromServer(committeeValues));\n  };\n\n  deleteCommittee = committee => {\n    this.committees.remove(committee);\n    this.api.delete(committee);\n  };\n}\n\ndecorate(CommitteeStore, {\n  committees: observable,\n  addCommittee: action,\n  deleteCommittee: action,\n  getOne: action,\n  currentCommittee: observable\n});\n\nexport default CommitteeStore;\n","import UserStore from \"./UserStore\";\nimport RequestStore from \"./RequestStore\";\nimport JobStore from \"./JobStore\";\nimport CommitteeStore from \"./CommitteeStore\";\n\nclass Store {\n  constructor() {\n    this.userStore = new UserStore(this);\n    this.requestStore = new RequestStore(this);\n    this.jobStore = new JobStore(this);\n    this.committeeStore = new CommitteeStore(this);\n  }\n}\n\nexport default new Store();\n","import { Provider } from \"mobx-react\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\nimport \"./styles/index.css\";\n\nReactDOM.render(\n  <Provider {...store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n\n  document.getElementById(`root`)\n);\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__31-FB\",\"rightMenu\":\"Navbar_rightMenu__2YlhS\",\"navLink\":\"Navbar_navLink__1J5_h\",\"logo\":\"Navbar_logo__1nFMD\",\"darkLink\":\"Navbar_darkLink__3YW7i\",\"active\":\"Navbar_active__3BiYV\",\"activeDark\":\"Navbar_activeDark__G_Ua1\",\"avatar\":\"Navbar_avatar__2yIAA\"};"],"sourceRoot":""}