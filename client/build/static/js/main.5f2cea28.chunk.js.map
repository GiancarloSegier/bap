{"version":3,"sources":["containers/auth/Auth.module.css","components/auth/Auth.module.css","components/Navbar.module.css","containers/Home.js","containers/Toolkit.js","constants/index.js","containers/DesignStudio.js","components/auth/LoginForm.jsx","containers/auth/Login.js","components/auth/RequestForm.jsx","containers/auth/Request.js","components/Navbar.jsx","components/auth/RegisterForm.jsx","containers/auth/Register.js","containers/App.js","serviceWorker.js","api/auth.js","utils/index.js","store/UserStore.js","store/index.js","index.js"],"names":["module","exports","Home","Toolkit","ROUTES","home","toolkit","designstudio","login","request","register","DesignStudio","inject","withRouter","userStore","history","emailInput","React","createRef","pwdInput","console","log","className","styles","container","onSubmit","e","preventDefault","current","value","then","push","form","type","name","id","placeholder","ref","input","button","subLink","to","link","Login","cityInput","countryInput","phoneInput","textInput","uuidv1","require","city","recipient","country","text","phone","requestId","fetch","catch","err","Request","observer","navbar","logo","exact","navLink","activeClassName","active","rightMenu","activeDark","authUser","onClick","logout","logoutIcon","darkLink","RegisterForm","handleChange","currentTarget","state","setState","handleSubmit","props","email","pwd","pwd2","this","htmlFor","onChange","disabled","Component","Register","App","path","strict","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","Auth","password","method","headers","body","JSON","stringify","res","status","json","data","Promise","reject","resolve","getUserFromCookie","token","Cookies","get","jwt","base64","split","replace","parse","atob","decodeJWT","UserStore","rootStore","setUser","username","authService","decorate","observable","action","ReactDOM","render","store","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,KAAO,qB,kBCAzBD,EAAOC,QAAU,CAAC,UAAY,0B,sDCA9BD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,QAAU,wBAAwB,KAAO,qBAAqB,SAAW,yBAAyB,OAAS,uBAAuB,WAAa,6B,+JCcxNC,EAVF,WACX,OACE,oCACE,6BACE,mDCOOC,EAVC,WACd,OACE,oCACE,6BACE,yCCVKC,EAAS,CACpBC,KAAK,IACLC,QAAS,WACTC,aAAc,gBACdC,MAAO,SACPC,QAAS,WACTC,SAAU,aCUGC,EAVM,WACnB,OACE,oCACE,6BACE,8C,gBCgDOC,cAAO,YAAPA,CAAoBC,aAnDjB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QACxBC,EAAaC,IAAMC,YACnBC,EAAWF,IAAMC,YACvBE,QAAQC,IAAIP,GAWZ,OACE,oCACE,yBAAKQ,UAAWC,IAAOC,WACrB,0BAAMC,SAZS,SAAAC,GACnBA,EAAEC,iBACFb,EACGN,MAAMQ,EAAWY,QAAQC,MAAOV,EAASS,QAAQC,OACjDC,MAAK,WACJf,EAAQgB,KAAK3B,EAAOC,UAOUiB,UAAWC,IAAOS,MAC9C,qCACA,2BACEC,KAAK,QACLC,KAAK,QACLC,GAAG,SACHC,YAAY,QACZC,IAAKrB,EACLM,UAAWC,IAAOe,QAGpB,2BACEL,KAAK,WACLC,KAAK,WACLC,GAAG,WACHC,YAAY,WACZC,IAAKlB,EACLG,UAAWC,IAAOe,QAGpB,2BAAOL,KAAK,SAASJ,MAAM,QAAQP,UAAWC,IAAOgB,SAErD,uBAAGjB,UAAWC,IAAOiB,SAArB,kBAEE,kBAAC,IAAD,CAAMC,GAAIrC,EAAOK,QAASa,UAAWC,IAAOmB,MAA5C,2B,iBC/BGC,EAVD,WACZ,OACE,oCACE,yBAAKrB,UAAWC,IAAOS,MACrB,kBAAC,EAAD,SC4EOpB,cAAO,YAAPA,CAAoBC,aAhFf,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,UACfE,GADwC,EAAdD,QACbE,IAAMC,aACnB0B,EAAY3B,IAAMC,YAClB2B,EAAe5B,IAAMC,YACrB4B,EAAa7B,IAAMC,YACnB6B,EAAY9B,IAAMC,YACxBE,QAAQC,IAAIP,GAsBZ,OACE,oCACE,yBAAKQ,UAAWC,IAAOC,WACrB,0BAAMC,SAvBS,SAAAC,GACnB,IAAMsB,EAASC,EAAQ,IACjBC,EAAON,EAAUhB,QAAQC,MACzBsB,EAAYnC,EAAWY,QAAQC,MAC/BuB,EAAUP,EAAajB,QAAQC,MAC/BwB,EAAON,EAAUnB,QAAQC,MACzByB,EAAQR,EAAWlB,QAAQC,MAC3B0B,EAAYP,IAElBtB,EAAEC,iBACF6B,MAAM,8CAAD,OAC2CL,EAD3C,iBAC6DE,EAD7D,iBAC0EH,EAD1E,oBAC0FE,EAD1F,kBAC2GE,EAD3G,eACuHC,IAC1HE,OAAM,SAAAC,GAAG,OAAItC,QAAQC,IAAIqC,MAC3Bd,EAAUhB,QAAQC,MAAQ,GAC1Bb,EAAWY,QAAQC,MAAQ,GAC3BgB,EAAajB,QAAQC,MAAQ,GAC7BkB,EAAUnB,QAAQC,MAAQ,GAC1BiB,EAAWlB,QAAQC,MAAQ,IAMOP,UAAWC,IAAOS,MAC9C,6CACA,2BACEC,KAAK,QACLC,KAAK,QACLC,GAAG,SACHC,YAAY,QACZC,IAAKrB,EACLM,UAAWC,IAAOe,QAEpB,2BACEL,KAAK,OACLC,KAAK,UACLC,GAAG,WACHC,YAAY,UACZC,IAAKQ,EACLvB,UAAWC,IAAOe,QAEpB,2BACEL,KAAK,OACLC,KAAK,OACLC,GAAG,OACHC,YAAY,OACZC,IAAKO,EACLtB,UAAWC,IAAOe,QAEpB,2BACEL,KAAK,OACLC,KAAK,QACLC,GAAG,SACHC,YAAY,QACZC,IAAKS,EACLxB,UAAWC,IAAOe,QAEpB,8BACEJ,KAAK,OACLC,GAAG,OACHC,YAAY,OACZC,IAAKU,EACLzB,UAAWC,IAAOe,QAGpB,2BAAOL,KAAK,SAASJ,MAAM,eAAeP,UAAWC,IAAOgB,gBC7DvDoB,EAVC,WACd,OACE,oCACE,yBAAKrC,UAAWC,IAAOS,MACrB,kBAAC,EAAD,S,gBCqEOpB,cAAO,YAAPA,CAAoBgD,aA5EpB,SAAC,GAAmB,IAAjB9C,EAAgB,EAAhBA,UAMhB,OACE,wBAAIQ,UAAWC,IAAOsC,QACpB,wBAAIvC,UAAWC,IAAOuC,MACpB,kBAAC,IAAD,CACEC,OAAO,EACPzC,UAAWC,IAAOyC,QAClBvB,GAAIrC,EAAOC,KACX4D,gBAAiB1C,IAAO2C,QAJ1B,SASF,yBAAK5C,UAAWC,IAAO4C,WACrB,4BACE,kBAAC,IAAD,CACEJ,OAAO,EACPzC,UAAWC,IAAOyC,QAClBvB,GAAIrC,EAAOG,aACX0D,gBAAiB1C,IAAO2C,QAJ1B,iBASF,4BACE,kBAAC,IAAD,CACEH,OAAO,EACPzC,UAAWC,IAAOyC,QAClBvB,GAAIrC,EAAOE,QACX2D,gBAAiB1C,IAAO6C,YAJ1B,YASAtD,EAAUuD,SAwBV,oCACE,2BAAIvD,EAAUuD,SAASnC,MACvB,4BAAQoC,QAhEG,SAAA5C,GACnBA,EAAEC,iBACFb,EAAUyD,UA8D6BjD,UAAWC,IAAOgD,QAC/C,0BAAMjD,UAAWC,IAAOiD,aAD1B,gBAzBF,oCACE,4BACE,kBAAC,IAAD,CACET,OAAO,EACPzC,UAAWC,IAAOyC,QAAU,IAAMzC,IAAOkD,SACzChC,GAAIrC,EAAOI,MACXyD,gBAAiB1C,IAAO6C,YAJ1B,iBASF,4BACE,kBAAC,IAAD,CACEL,OAAO,EACPzC,UAAWC,IAAOyC,QAAU,IAAMzC,IAAOkD,SACzChC,GAAIrC,EAAOK,QACXwD,gBAAiB1C,IAAO6C,YAJ1B,yB,QCnDRM,E,YACJ,aAAe,IAAD,8BACZ,+CAIFC,aAAe,SAAAjD,GACb,IAAMY,EAAQZ,EAAEkD,cACVC,EAAK,eAAQ,EAAKA,OACxBA,EAAMvC,EAAMJ,MAAQI,EAAMT,MAC1B,EAAKiD,SAASD,IATF,EAYdE,aAAe,SAAArD,GACbA,EAAEC,iBADgB,MAEa,EAAKqD,MAA5BlE,EAFU,EAEVA,UAAWC,EAFD,EAECA,QAFD,EAGW,EAAK8D,MAA1BI,EAHU,EAGVA,MAAOC,EAHG,EAGHA,IAAKhD,EAHF,EAGEA,KACpBpB,EAAUJ,SAASwB,EAAM+C,EAAOC,GAAKpD,MAAK,WACxCf,EAAQgB,KAAK3B,EAAOI,WAftB,EAAKqE,MAAQ,CAAEI,MAAM,GAAKC,IAAI,GAAKC,KAAK,GAAKjD,KAAK,IAFtC,E,sEAqBJ,IAAD,EAC4BkD,KAAKP,MAAhCI,EADD,EACCA,MAAOC,EADR,EACQA,IAAKC,EADb,EACaA,KAAMjD,EADnB,EACmBA,KAC1B,OACE,oCACE,yBAAKZ,UAAWC,IAAOC,WACrB,0BAAMC,SAAU2D,KAAKL,aAAczD,UAAWC,IAAOS,MACnD,wCACA,2BAAOqD,QAAQ,SACb,2BACEpD,KAAK,OACLC,KAAK,OACLC,GAAG,QACHN,MAAOK,EACPoD,SAAUF,KAAKT,aACfrD,UAAWC,IAAOe,MAClBF,YAAY,cAGhB,2BAAOiD,QAAQ,SACb,2BACEpD,KAAK,QACLC,KAAK,QACLC,GAAG,SACHN,MAAOoD,EACPK,SAAUF,KAAKT,aACfrD,UAAWC,IAAOe,MAClBF,YAAY,WAGhB,2BAAOiD,QAAQ,YACb,2BACEpD,KAAK,WACLC,KAAK,MACLC,GAAG,MACHN,MAAOqD,EACPI,SAAUF,KAAKT,aACfrD,UAAWC,IAAOe,MAClBF,YAAY,cAGhB,2BAAOiD,QAAQ,YACb,2BACEpD,KAAK,WACLC,KAAK,OACLC,GAAG,OACHE,IAAK8C,EACLG,SAAUF,KAAKT,aACfrD,UAAWC,IAAOe,MAClBF,YAAY,sBAGhB,2BACEH,KAAK,SACLJ,MAAM,WACN0D,SAAWL,GAAOA,IAAQC,IAAUF,IAAU/C,IAASgD,EACvD5D,UAAWC,IAAOgB,SAEpB,uBAAGjB,UAAWC,IAAOiB,SAArB,uBAEE,kBAAC,IAAD,CAAMC,GAAIrC,EAAOI,MAAOc,UAAWC,IAAOmB,MAA1C,kB,GAjFa8C,aA4FZ5E,cAAO,YAAPA,CAAoBC,YAAW6D,ICnF/Be,EAVE,WACf,OACE,oCACE,yBAAKnE,UAAWC,IAAOS,MACrB,kBAAC,EAAD,SCoBO0D,E,iLAhBX,OACE,8BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAMvF,EAAOC,KAAM0D,OAAK,EAAC6B,QAAM,EAACC,UAAW3F,IAClD,kBAAC,IAAD,CAAOyF,KAAMvF,EAAOE,QAASsF,QAAM,EAACC,UAAW1F,IAC/C,kBAAC,IAAD,CAAOwF,KAAMvF,EAAOG,aAAcqF,QAAM,EAACC,UAAWlF,IACpD,kBAAC,IAAD,CAAOgF,KAAMvF,EAAOI,MAAOoF,QAAM,EAACC,UAAWlD,IAC7C,kBAAC,IAAD,CAAOgD,KAAMvF,EAAOK,QAASmF,QAAM,EAACC,UAAWlC,IAC/C,kBAAC,IAAD,CAAOgC,KAAMvF,EAAOM,SAAUkF,QAAM,EAACC,UAAWJ,U,GAXxCD,aCAZM,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACP9F,SAAS2F,GACTvE,MAAK,SAAA2E,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9B,QACf0B,UAAUC,cAAcM,YAI1B1F,QAAQC,IACN,iHAKEiF,GAAUA,EAAOS,UACnBT,EAAOS,SAASN,KAMlBrF,QAAQC,IAAI,sCAGRiF,GAAUA,EAAOU,WACnBV,EAAOU,UAAUP,WAO5BhD,OAAM,SAAAwD,GACL7F,QAAQ6F,MAAM,4CAA6CA,M,WC5ClDC,E,sCAnDb1G,MAAQ,SAACyE,EAAOkC,GACd,OAAO3D,MAAM,cAAe,CAC1B4D,OAAO,OACPC,QAAS,CACP,eAAe,oBAEjBC,KAAMC,KAAKC,UAAU,CACnBvC,QACAkC,eAEDrF,MAAK,SAAA2F,GACN,GAAmB,MAAfA,EAAIC,OAGN,OAAOD,EAAIE,OAAO7F,MAAK,SAAA8F,GACrBC,QAAQC,OAAOF,MAHjBC,QAAQE,c,KASdxD,OAAS,WACP,OAAOf,MAAM,eAAgB,CAC3B4D,OAAO,OACPC,QAAS,CACP,eAAe,uB,KAKrB3G,SAAW,SAACwB,EAAM+C,EAAOkC,GACvB,OAAO3D,MAAM,iBAAkB,CAC7B4D,OAAO,OACPC,QAAS,CACP,eAAe,oBAEjBC,KAAMC,KAAKC,UAAU,CACnBtF,OACA+C,QACAkC,eAEDrF,MAAK,SAAA2F,GACa,MAAfA,EAAIC,OACNG,QAAQE,UAERF,QAAQC,c,iBCtCVE,EAAoB,WACxB,IAAMC,EAAQC,IAAQC,IAAR,SACd,OAAIF,EARY,SAAAG,GAChB,IACMC,EADYD,EAAIE,MAAJ,KAAe,GACRC,QAAQ,KAAlB,KAA6BA,QAAQ,KAArC,KACf,OAAOhB,KAAKiB,MAAMxC,OAAOyC,KAAKJ,IAMrBK,CAAUT,GAEZ,MCTHU,EAGJ,WAAYC,GAAY,IAAD,gCAFvBvE,SAAW,KAEY,KAMvBwE,QAAU,SAAAhH,GAAK,OAAK,EAAKwC,SAAWxC,GANb,KAQvBrB,MAAQ,SAACsI,EAAU3B,GACjB,OAAO,EAAK4B,YACTvI,MAAMsI,EAAU3B,GAChBrF,MAAK,WACJ,EAAK+G,QAAQb,KACbH,QAAQE,aAETtE,OAAM,WACL,EAAKoF,QAAQ,MACbhB,QAAQC,aAjBS,KAqBvBpH,SAAW,SAACwB,EAAM+C,EAAOC,GAAd,OAAsB,EAAK6D,YAAYrI,SAASwB,EAAM+C,EAAOC,IArBjD,KAuBvBX,OAAS,WACP,EAAKwE,YAAYxE,SAASzC,MAAK,kBAAM,EAAK+G,QAAQ,UAvBlDzD,KAAKwD,UAAYA,EACjBxD,KAAK2D,YAAc,IAAI7B,EACvB9B,KAAKyD,QAAQb,MAyBjBgB,YAASL,EAAW,CAAEtE,SAAU4E,IAAYJ,QAASK,MAEtCP,QC7BA,MALb,aAAe,oBACbvD,KAAKtE,UAAY,IAAI6H,EAAUvD,O,MCKnC+D,IAASC,OACP,kBAAC,IAAaC,EACZ,kBAAC,IAAD,KACE,kBAAC,EAAD,QAIJC,SAASC,eAAT,SLMK,SAAkBjD,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIiD,IAAIC,GAAwBzD,OAAOC,SAASyD,MACpDC,SAAW3D,OAAOC,SAAS0D,OAIvC,OAGF3D,OAAO4D,iBAAiB,QAAQ,WAC9B,IAAMvD,EAAK,UAAMoD,GAAN,sBAEP3D,IAgEV,SAAiCO,EAAOC,GAEtC9C,MAAM6C,EAAO,CACXgB,QAAS,CAAE,iBAAkB,YAE5BvF,MAAK,SAAA+H,GAEJ,IAAMC,EAAcD,EAASxC,QAAQc,IAAI,gBAEnB,MAApB0B,EAASnC,QACO,MAAfoC,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5CxD,UAAUC,cAAcwD,MAAMlI,MAAK,SAAA2E,GACjCA,EAAawD,aAAanI,MAAK,WAC7BkE,OAAOC,SAASiE,eAKpB9D,EAAgBC,EAAOC,MAG1B7C,OAAM,WACLrC,QAAQC,IACN,oEAvFA8I,CAAwB9D,EAAOC,GAI/BC,UAAUC,cAAcwD,MAAMlI,MAAK,WACjCV,QAAQC,IACN,iHAMJ+E,EAAgBC,EAAOC,OKhC/BE,K","file":"static/js/main.5f2cea28.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Auth_form__1gJBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Auth_container__3Qr6g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__31-FB\",\"rightMenu\":\"Navbar_rightMenu__2YlhS\",\"navLink\":\"Navbar_navLink__1J5_h\",\"logo\":\"Navbar_logo__1nFMD\",\"darkLink\":\"Navbar_darkLink__3YW7i\",\"active\":\"Navbar_active__3BiYV\",\"activeDark\":\"Navbar_activeDark__G_Ua1\"};","import React from \"react\";\n// import Todos from \"../containers/Todos\";\n// import styles from \"./Home.module.css\";\n// import Form from \"../components/Form\";\n\nconst Home = () => {\n  return (\n    <>\n      <div>\n        <p>Hallo allemaalkes</p>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n// import Topbar from \"../components/Topbar\";\n// import Todos from \"../containers/Todos\";\n// import styles from \"./Home.module.css\";\n// import Form from \"../components/Form\";\n\nconst Toolkit = () => {\n  return (\n    <>\n      <div>\n        <p>Toolkit</p>\n      </div>\n    </>\n  );\n};\n\nexport default Toolkit;\n","export const ROUTES = {\n  home: `/`,\n  toolkit: \"/toolkit\",\n  designstudio: \"/designstudio\",\n  login: \"/login\",\n  request: \"/request\",\n  register: \"/register\"\n};\n","import React from \"react\";\n// import Topbar from \"../components/Topbar\";\n// import Todos from \"../containers/Todos\";\n// import styles from \"./Home.module.css\";\n// import Form from \"../components/Form\";\n\nconst DesignStudio = () => {\n  return (\n    <>\n      <div>\n        <p>Designstudio</p>\n      </div>\n    </>\n  );\n};\n\nexport default DesignStudio;\n","import React from \"react\";\nimport { inject } from \"mobx-react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { ROUTES } from \"../../constants\";\nimport styles from \"./Auth.module.css\";\n\nconst LoginForm = ({ userStore, history }) => {\n  const emailInput = React.createRef();\n  const pwdInput = React.createRef();\n  console.log(userStore);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    userStore\n      .login(emailInput.current.value, pwdInput.current.value)\n      .then(() => {\n        history.push(ROUTES.home);\n      });\n  };\n\n  return (\n    <>\n      <div className={styles.container}>\n        <form onSubmit={handleSubmit} className={styles.form}>\n          <h2>Login</h2>\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email=\"\n            placeholder=\"email\"\n            ref={emailInput}\n            className={styles.input}\n          />\n\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"password\"\n            ref={pwdInput}\n            className={styles.input}\n          />\n\n          <input type=\"submit\" value=\"login\" className={styles.button} />\n\n          <p className={styles.subLink}>\n            No account?{` `}\n            <Link to={ROUTES.request} className={styles.link}>\n              Send a request!\n            </Link>\n          </p>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default inject(`userStore`)(withRouter(LoginForm));\n","import React from \"react\";\nimport LoginForm from \"../../components/auth/LoginForm\";\n// import Topbar from \"../components/Topbar\";\n// import Todos from \"../containers/Todos\";\nimport styles from \"./Auth.module.css\";\n// import Form from \"../components/Form\";\n\nconst Login = () => {\n  return (\n    <>\n      <div className={styles.form}>\n        <LoginForm />\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { inject } from \"mobx-react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { ROUTES } from \"../../constants\";\nimport styles from \"./Auth.module.css\";\n\nconst RequestForm = ({ userStore, history }) => {\n  const emailInput = React.createRef();\n  const cityInput = React.createRef();\n  const countryInput = React.createRef();\n  const phoneInput = React.createRef();\n  const textInput = React.createRef();\n  console.log(userStore);\n\n  const handleSubmit = e => {\n    const uuidv1 = require(\"uuid/v1\");\n    const city = cityInput.current.value;\n    const recipient = emailInput.current.value;\n    const country = countryInput.current.value;\n    const text = textInput.current.value;\n    const phone = phoneInput.current.value;\n    const requestId = uuidv1();\n\n    e.preventDefault();\n    fetch(\n      `http://127.0.0.1:4000/send-email?recipient=${recipient}&text=${text}&city=${city}&country=${country}&phone=${phone}&id=${requestId}`\n    ).catch(err => console.log(err));\n    cityInput.current.value = \"\";\n    emailInput.current.value = \"\";\n    countryInput.current.value = \"\";\n    textInput.current.value = \"\";\n    phoneInput.current.value = \"\";\n  };\n\n  return (\n    <>\n      <div className={styles.container}>\n        <form onSubmit={handleSubmit} className={styles.form}>\n          <h2>Request acces</h2>\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email=\"\n            placeholder=\"email\"\n            ref={emailInput}\n            className={styles.input}\n          />\n          <input\n            type=\"text\"\n            name=\"country\"\n            id=\"country=\"\n            placeholder=\"country\"\n            ref={countryInput}\n            className={styles.input}\n          />\n          <input\n            type=\"text\"\n            name=\"city\"\n            id=\"city\"\n            placeholder=\"city\"\n            ref={cityInput}\n            className={styles.input}\n          />\n          <input\n            type=\"text\"\n            name=\"phone\"\n            id=\"phone=\"\n            placeholder=\"phone\"\n            ref={phoneInput}\n            className={styles.input}\n          />\n          <textarea\n            name=\"text\"\n            id=\"text\"\n            placeholder=\"text\"\n            ref={textInput}\n            className={styles.input}\n          />\n\n          <input type=\"submit\" value=\"send request\" className={styles.button} />\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default inject(`userStore`)(withRouter(RequestForm));\n","import React from \"react\";\nimport RequestForm from \"../../components/auth/RequestForm\";\nimport styles from \"./Auth.module.css\";\n\n// import Topbar from \"../components/Topbar\";\n// import Todos from \"../containers/Todos\";\n// import styles from \"./Home.module.css\";\n// import Form from \"../components/Form\";\n\nconst Request = () => {\n  return (\n    <>\n      <div className={styles.form}>\n        <RequestForm />\n      </div>\n    </>\n  );\n};\n\nexport default Request;\n","import React from \"react\";\nimport styles from \"./Navbar.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { ROUTES } from \"../constants\";\nimport { inject, observer } from \"mobx-react\";\n\nconst Navbar = ({ userStore }) => {\n  const handleLogout = e => {\n    e.preventDefault();\n    userStore.logout();\n  };\n\n  return (\n    <ul className={styles.navbar}>\n      <li className={styles.logo}>\n        <NavLink\n          exact={true}\n          className={styles.navLink}\n          to={ROUTES.home}\n          activeClassName={styles.active}\n        >\n          Logo\n        </NavLink>\n      </li>\n      <div className={styles.rightMenu}>\n        <li>\n          <NavLink\n            exact={true}\n            className={styles.navLink}\n            to={ROUTES.designstudio}\n            activeClassName={styles.active}\n          >\n            Designstudio\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            exact={true}\n            className={styles.navLink}\n            to={ROUTES.toolkit}\n            activeClassName={styles.activeDark}\n          >\n            Toolkit\n          </NavLink>\n        </li>\n        {!userStore.authUser ? (\n          <>\n            <li>\n              <NavLink\n                exact={true}\n                className={styles.navLink + \" \" + styles.darkLink}\n                to={ROUTES.login}\n                activeClassName={styles.activeDark}\n              >\n                Member login\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                exact={true}\n                className={styles.navLink + \" \" + styles.darkLink}\n                to={ROUTES.request}\n                activeClassName={styles.activeDark}\n              >\n                Request acces\n              </NavLink>\n            </li>\n          </>\n        ) : (\n          <>\n            <p>{userStore.authUser.name}</p>\n            <button onClick={handleLogout} className={styles.logout}>\n              <span className={styles.logoutIcon} />\n              Log out{` `}\n            </button>\n          </>\n        )}\n      </div>\n    </ul>\n  );\n};\n\nexport default inject(`userStore`)(observer(Navbar));\n","import React, { Component } from \"react\";\nimport { inject } from \"mobx-react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { ROUTES } from \"../../constants\";\nimport styles from \"./Auth.module.css\";\n\nclass RegisterForm extends Component {\n  constructor() {\n    super();\n    this.state = { email: ``, pwd: ``, pwd2: ``, name: `` };\n  }\n\n  handleChange = e => {\n    const input = e.currentTarget;\n    const state = { ...this.state };\n    state[input.name] = input.value;\n    this.setState(state);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { userStore, history } = this.props;\n    const { email, pwd, name } = this.state;\n    userStore.register(name, email, pwd).then(() => {\n      history.push(ROUTES.login);\n    });\n  };\n\n  render() {\n    const { email, pwd, pwd2, name } = this.state;\n    return (\n      <>\n        <div className={styles.container}>\n          <form onSubmit={this.handleSubmit} className={styles.form}>\n            <h2>Register</h2>\n            <label htmlFor=\"email\">\n              <input\n                type=\"test\"\n                name=\"name\"\n                id=\"name=\"\n                value={name}\n                onChange={this.handleChange}\n                className={styles.input}\n                placeholder=\"Username\"\n              />\n            </label>\n            <label htmlFor=\"email\">\n              <input\n                type=\"email\"\n                name=\"email\"\n                id=\"email=\"\n                value={email}\n                onChange={this.handleChange}\n                className={styles.input}\n                placeholder=\"Email\"\n              />\n            </label>\n            <label htmlFor=\"username\">\n              <input\n                type=\"password\"\n                name=\"pwd\"\n                id=\"pwd\"\n                value={pwd}\n                onChange={this.handleChange}\n                className={styles.input}\n                placeholder=\"Password\"\n              />\n            </label>\n            <label htmlFor=\"username\">\n              <input\n                type=\"password\"\n                name=\"pwd2\"\n                id=\"pwd2\"\n                ref={pwd2}\n                onChange={this.handleChange}\n                className={styles.input}\n                placeholder=\"Confirm password\"\n              />\n            </label>\n            <input\n              type=\"submit\"\n              value=\"Register\"\n              disabled={(pwd && pwd !== pwd2) || !email || !name || !pwd}\n              className={styles.button}\n            />\n            <p className={styles.subLink}>\n              Have an account?{` `}\n              <Link to={ROUTES.login} className={styles.link}>\n                Login!\n              </Link>\n            </p>\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default inject(`userStore`)(withRouter(RegisterForm));\n","import React from \"react\";\n// import Todos from \"../containers/Todos\";\nimport styles from \"./Auth.module.css\";\n// import Form from \"../components/Form\";\nimport RegisterForm from \"../../components/auth/RegisterForm\";\n\nconst Register = () => {\n  return (\n    <>\n      <div className={styles.form}>\n        <RegisterForm />\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./Home.js\";\nimport Toolkit from \"./Toolkit.js\";\nimport { ROUTES } from \"../constants\";\nimport DesignStudio from \"./DesignStudio.js\";\nimport Login from \"./auth/Login\";\nimport Request from \"./auth/Request.js\";\nimport NavBar from \"../components/Navbar.jsx\";\nimport Register from \"./auth/Register.js\";\n\nclass App extends Component {\n  render() {\n    return (\n      <main>\n        <NavBar />\n        <Switch>\n          <Route path={ROUTES.home} exact strict component={Home} />\n          <Route path={ROUTES.toolkit} strict component={Toolkit} />\n          <Route path={ROUTES.designstudio} strict component={DesignStudio} />\n          <Route path={ROUTES.login} strict component={Login} />\n          <Route path={ROUTES.request} strict component={Request} />\n          <Route path={ROUTES.register} strict component={Register} />\n        </Switch>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","class Auth {\n  login = (email, password) => {\n    return fetch(`/auth/login`, {\n      method: `POST`,\n      headers: {\n        \"content-type\": `application/json`\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        Promise.resolve();\n      } else {\n        return res.json().then(data => {\n          Promise.reject(data);\n        });\n      }\n    });\n  };\n\n  logout = () => {\n    return fetch(`/auth/logout`, {\n      method: `POST`,\n      headers: {\n        \"content-type\": `application/json`\n      }\n    });\n  };\n\n  register = (name, email, password) => {\n    return fetch(`/auth/register`, {\n      method: `POST`,\n      headers: {\n        \"content-type\": `application/json`\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        Promise.resolve();\n      } else {\n        Promise.reject();\n      }\n    });\n  };\n}\n\nexport default Auth;\n","import Cookies from \"js-cookie\";\n\nconst decodeJWT = jwt => {\n  const base64Url = jwt.split(`.`)[1];\n  const base64 = base64Url.replace(/-/g, `+`).replace(/_/g, `/`);\n  return JSON.parse(window.atob(base64));\n};\n\nconst getUserFromCookie = () => {\n  const token = Cookies.get(`token`);\n  if (token) {\n    return decodeJWT(token);\n  }\n  return null;\n};\n\nexport { getUserFromCookie };\n","import { decorate, observable, action } from \"mobx\";\nimport Auth from \"../api/auth\";\nimport { getUserFromCookie } from \"../utils/index.js\";\n\nclass UserStore {\n  authUser = null;\n\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.authService = new Auth();\n    this.setUser(getUserFromCookie());\n  }\n\n  setUser = value => (this.authUser = value);\n\n  login = (username, password) => {\n    return this.authService\n      .login(username, password)\n      .then(() => {\n        this.setUser(getUserFromCookie());\n        Promise.resolve();\n      })\n      .catch(() => {\n        this.setUser(null);\n        Promise.reject();\n      });\n  };\n\n  register = (name, email, pwd) => this.authService.register(name, email, pwd);\n\n  logout = () => {\n    this.authService.logout().then(() => this.setUser(null));\n  };\n}\n\ndecorate(UserStore, { authUser: observable, setUser: action });\n\nexport default UserStore;\n","import UserStore from \"./UserStore\";\n\nclass Store {\n  constructor() {\n    this.userStore = new UserStore(this);\n  }\n}\n\nexport default new Store();\n","import { Provider } from \"mobx-react\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\nimport \"./styles/index.css\";\n\nReactDOM.render(\n  <Provider {...store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n\n  document.getElementById(`root`)\n);\nserviceWorker.register();\n"],"sourceRoot":""}