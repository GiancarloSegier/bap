{"version":3,"sources":["components/auth/Auth.module.css","containers/Login.module.css","components/Navbar.module.css","containers/Home.js","containers/Toolkit.js","constants/index.js","containers/DesignStudio.js","components/auth/LoginForm.jsx","components/auth/RegisterForm.jsx","containers/Login.js","containers/Request.js","components/Navbar.jsx","containers/App.js","serviceWorker.js","api/auth.js","utils/index.js","store/UserStore.js","store/index.js","index.js"],"names":["module","exports","Home","Toolkit","ROUTES","home","toolkit","designstudio","login","request","DesignStudio","inject","withRouter","userStore","history","emailInput","React","createRef","pwdInput","console","log","className","styles","container","authBox","logoBox","logo__img","onSubmit","e","preventDefault","current","value","then","push","form","heading2","type","name","id","placeholder","ref","input","button","subLink","to","link","RegisterForm","handleChange","currentTarget","state","setState","handleSubmit","props","email","pwd","register","pwd2","this","htmlFor","onChange","disabled","Component","Login","Request","observer","navbar","logo","exact","navLink","activeClassName","active","rightMenu","activeDark","authUser","onClick","logout","logoutIcon","darkLink","App","path","strict","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","Auth","password","fetch","method","headers","body","JSON","stringify","res","status","json","data","Promise","reject","resolve","getUserFromCookie","token","Cookies","get","jwt","base64","split","replace","parse","atob","decodeJWT","UserStore","rootStore","setUser","username","authService","decorate","observable","action","ReactDOM","render","store","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.08ebb7ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Auth_container__3Qr6g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__258II\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__31-FB\",\"rightMenu\":\"Navbar_rightMenu__2YlhS\",\"navLink\":\"Navbar_navLink__1J5_h\",\"logo\":\"Navbar_logo__1nFMD\",\"darkLink\":\"Navbar_darkLink__3YW7i\",\"active\":\"Navbar_active__3BiYV\",\"activeDark\":\"Navbar_activeDark__G_Ua1\"};","import React from \"react\";\n// import Todos from \"../containers/Todos\";\n// import styles from \"./Home.module.css\";\n// import Form from \"../components/Form\";\n\nconst Home = () => {\n  return (\n    <>\n      <div>\n        <p>Hallo allemaalkes</p>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n// import Topbar from \"../components/Topbar\";\n// import Todos from \"../containers/Todos\";\n// import styles from \"./Home.module.css\";\n// import Form from \"../components/Form\";\n\nconst Toolkit = () => {\n  return (\n    <>\n      <div>\n        <p>Toolkit</p>\n      </div>\n    </>\n  );\n};\n\nexport default Toolkit;\n","export const ROUTES = {\n  home: `/`,\n  toolkit: \"/toolkit\",\n  designstudio: \"/designstudio\",\n  login: \"/login\",\n  request: \"/request\"\n};\n","import React from \"react\";\n// import Topbar from \"../components/Topbar\";\n// import Todos from \"../containers/Todos\";\n// import styles from \"./Home.module.css\";\n// import Form from \"../components/Form\";\n\nconst DesignStudio = () => {\n  return (\n    <>\n      <div>\n        <p>Designstudio</p>\n      </div>\n    </>\n  );\n};\n\nexport default DesignStudio;\n","import React from \"react\";\nimport { inject } from \"mobx-react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { ROUTES } from \"../../constants\";\nimport styles from \"./Auth.module.css\";\n\nconst LoginForm = ({ userStore, history }) => {\n  const emailInput = React.createRef();\n  const pwdInput = React.createRef();\n  console.log(userStore);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    userStore\n      .login(emailInput.current.value, pwdInput.current.value)\n      .then(() => {\n        history.push(ROUTES.home);\n      });\n  };\n\n  return (\n    <>\n      <div className={styles.container}>\n        <div className={styles.authBox}>\n          <div className={styles.logoBox}>\n            <h1 className={styles.logo__img}>\n              <span className=\"hidden\">Mr. Todo</span>\n            </h1>\n          </div>\n\n          <form onSubmit={handleSubmit} className={styles.form}>\n            <h2 className={styles.heading2}>Login</h2>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email=\"\n              placeholder=\"email\"\n              ref={emailInput}\n              className={styles.input}\n            />\n\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"password\"\n              ref={pwdInput}\n              className={styles.input}\n            />\n\n            <input type=\"submit\" value=\"login\" className={styles.button} />\n\n            <p className={styles.subLink}>\n              No account?{` `}\n              <Link to={ROUTES.request} className={styles.link}>\n                Send a request!\n              </Link>\n            </p>\n          </form>\n        </div>\n        <div>\n          <p>{}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default inject(`userStore`)(withRouter(LoginForm));\n","import React, { Component } from \"react\";\nimport { inject } from \"mobx-react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { ROUTES } from \"../../constants\";\nimport styles from \"./Auth.module.css\";\n\nclass RegisterForm extends Component {\n  constructor() {\n    super();\n    this.state = { email: ``, pwd: ``, pwd2: ``, name: `` };\n  }\n\n  handleChange = e => {\n    const input = e.currentTarget;\n    const state = { ...this.state };\n    state[input.name] = input.value;\n    this.setState(state);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { userStore, history } = this.props;\n    const { email, pwd, name } = this.state;\n    userStore.register(name, email, pwd).then(() => {\n      history.push(ROUTES.login);\n    });\n  };\n\n  render() {\n    const { email, pwd, pwd2, name } = this.state;\n    return (\n      <>\n        <div className={styles.container}>\n          <div className={styles.authBox}>\n            <div className={styles.logoBox}>\n              <h1 className={styles.logo__img}>\n                <span className=\"hidden\">Mr. Todo</span>\n              </h1>\n            </div>\n            <form onSubmit={this.handleSubmit} className={styles.form}>\n              <h2 className={styles.heading2}>Register</h2>\n              <label htmlFor=\"email\">\n                <input\n                  type=\"test\"\n                  name=\"name\"\n                  id=\"name=\"\n                  value={name}\n                  onChange={this.handleChange}\n                  className={styles.input}\n                  placeholder=\"Username\"\n                />\n              </label>\n              <label htmlFor=\"email\">\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email=\"\n                  value={email}\n                  onChange={this.handleChange}\n                  className={styles.input}\n                  placeholder=\"Email\"\n                />\n              </label>\n              <label htmlFor=\"username\">\n                <input\n                  type=\"password\"\n                  name=\"pwd\"\n                  id=\"pwd\"\n                  value={pwd}\n                  onChange={this.handleChange}\n                  className={styles.input}\n                  placeholder=\"Password\"\n                />\n              </label>\n              <label htmlFor=\"username\">\n                <input\n                  type=\"password\"\n                  name=\"pwd2\"\n                  id=\"pwd2\"\n                  ref={pwd2}\n                  onChange={this.handleChange}\n                  className={styles.input}\n                  placeholder=\"Confirm password\"\n                />\n              </label>\n              <input\n                type=\"submit\"\n                value=\"Register\"\n                disabled={(pwd && pwd !== pwd2) || !email || !name || !pwd}\n                className={styles.button}\n              />\n              <p className={styles.subLink}>\n                Have an account?{` `}\n                <Link to={ROUTES.login} className={styles.link}>\n                  Login!\n                </Link>\n              </p>\n            </form>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default inject(`userStore`)(withRouter(RegisterForm));\n","import React from \"react\";\nimport LoginForm from \"../components/auth/LoginForm\";\nimport RegisterForm from \"../components/auth/RegisterForm\";\n// import Topbar from \"../components/Topbar\";\n// import Todos from \"../containers/Todos\";\nimport styles from \"./Login.module.css\";\n// import Form from \"../components/Form\";\n\nconst Login = () => {\n  return (\n    <>\n      <div className={styles.form}>\n        <LoginForm />\n        <hr />\n        <RegisterForm />\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\n// import Topbar from \"../components/Topbar\";\n// import Todos from \"../containers/Todos\";\n// import styles from \"./Home.module.css\";\n// import Form from \"../components/Form\";\n\nconst Request = () => {\n  return (\n    <>\n      <div>\n        <p>Requestpage</p>\n      </div>\n    </>\n  );\n};\n\nexport default Request;\n","import React from \"react\";\nimport styles from \"./Navbar.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { ROUTES } from \"../constants\";\nimport { inject, observer } from \"mobx-react\";\n\nconst Navbar = ({ userStore }) => {\n  const handleLogout = e => {\n    e.preventDefault();\n    userStore.logout();\n  };\n\n  return (\n    <ul className={styles.navbar}>\n      <li className={styles.logo}>\n        <NavLink\n          exact={true}\n          className={styles.navLink}\n          to={ROUTES.home}\n          activeClassName={styles.active}\n        >\n          Logo\n        </NavLink>\n      </li>\n      <div className={styles.rightMenu}>\n        <li>\n          <NavLink\n            exact={true}\n            className={styles.navLink}\n            to={ROUTES.designstudio}\n            activeClassName={styles.active}\n          >\n            Designstudio\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            exact={true}\n            className={styles.navLink}\n            to={ROUTES.toolkit}\n            activeClassName={styles.activeDark}\n          >\n            Toolkit\n          </NavLink>\n        </li>\n        {!userStore.authUser ? (\n          <>\n            <li>\n              <NavLink\n                exact={true}\n                className={styles.navLink + \" \" + styles.darkLink}\n                to={ROUTES.login}\n                activeClassName={styles.activeDark}\n              >\n                Member login\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                exact={true}\n                className={styles.navLink + \" \" + styles.darkLink}\n                to={ROUTES.request}\n                activeClassName={styles.activeDark}\n              >\n                Request acces\n              </NavLink>\n            </li>\n          </>\n        ) : (\n          <>\n            <p>{userStore.authUser.name}</p>\n            <button onClick={handleLogout} className={styles.logout}>\n              <span className={styles.logoutIcon} />\n              Log out{` `}\n            </button>\n          </>\n        )}\n      </div>\n    </ul>\n  );\n};\n\nexport default inject(`userStore`)(observer(Navbar));\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./Home.js\";\nimport Toolkit from \"./Toolkit.js\";\nimport { ROUTES } from \"../constants\";\nimport DesignStudio from \"./DesignStudio.js\";\nimport Login from \"./Login.js\";\nimport Request from \"./Request.js\";\nimport NavBar from \"../components/Navbar.jsx\";\n\nclass App extends Component {\n  render() {\n    return (\n      <main>\n        <NavBar />\n        <Switch>\n          <Route path={ROUTES.home} exact strict component={Home} />\n          <Route path={ROUTES.toolkit} strict component={Toolkit} />\n          <Route path={ROUTES.designstudio} strict component={DesignStudio} />\n          <Route path={ROUTES.login} strict component={Login} />\n          <Route path={ROUTES.request} strict component={Request} />\n        </Switch>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","class Auth {\n  login = (email, password) => {\n    return fetch(`/auth/login`, {\n      method: `POST`,\n      headers: {\n        \"content-type\": `application/json`\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        Promise.resolve();\n      } else {\n        return res.json().then(data => {\n          Promise.reject(data);\n        });\n      }\n    });\n  };\n\n  logout = () => {\n    return fetch(`/auth/logout`, {\n      method: `POST`,\n      headers: {\n        \"content-type\": `application/json`\n      }\n    });\n  };\n\n  register = (name, email, password) => {\n    return fetch(`/auth/register`, {\n      method: `POST`,\n      headers: {\n        \"content-type\": `application/json`\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        Promise.resolve();\n      } else {\n        Promise.reject();\n      }\n    });\n  };\n}\n\nexport default Auth;\n","import Cookies from \"js-cookie\";\n\nconst decodeJWT = jwt => {\n  const base64Url = jwt.split(`.`)[1];\n  const base64 = base64Url.replace(/-/g, `+`).replace(/_/g, `/`);\n  return JSON.parse(window.atob(base64));\n};\n\nconst getUserFromCookie = () => {\n  const token = Cookies.get(`token`);\n  if (token) {\n    return decodeJWT(token);\n  }\n  return null;\n};\n\nexport { getUserFromCookie };\n","import { decorate, observable, action } from \"mobx\";\nimport Auth from \"../api/auth\";\nimport { getUserFromCookie } from \"../utils/index.js\";\n\nclass UserStore {\n  authUser = null;\n\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.authService = new Auth();\n    this.setUser(getUserFromCookie());\n  }\n\n  setUser = value => (this.authUser = value);\n\n  login = (username, password) => {\n    return this.authService\n      .login(username, password)\n      .then(() => {\n        this.setUser(getUserFromCookie());\n        Promise.resolve();\n      })\n      .catch(() => {\n        this.setUser(null);\n        Promise.reject();\n      });\n  };\n\n  register = (name, email, pwd) => this.authService.register(name, email, pwd);\n\n  logout = () => {\n    this.authService.logout().then(() => this.setUser(null));\n  };\n}\n\ndecorate(UserStore, { authUser: observable, setUser: action });\n\nexport default UserStore;\n","import UserStore from \"./UserStore\";\n\nclass Store {\n  constructor() {\n    this.userStore = new UserStore(this);\n  }\n}\n\nexport default new Store();\n","import { Provider } from \"mobx-react\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\nimport \"./styles/index.css\";\n\nReactDOM.render(\n  <Provider {...store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n\n  document.getElementById(`root`)\n);\nserviceWorker.register();\n"],"sourceRoot":""}